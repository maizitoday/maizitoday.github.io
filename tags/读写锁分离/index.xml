<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>读写锁分离 on </title>
    <link>http://maizitoday.github.io/tags/%E8%AF%BB%E5%86%99%E9%94%81%E5%88%86%E7%A6%BB/</link>
    <description>Recent content in 读写锁分离 on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://maizitoday.github.io/tags/%E8%AF%BB%E5%86%99%E9%94%81%E5%88%86%E7%A6%BB/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>读写锁分离-设计模式</title>
      <link>http://maizitoday.github.io/post/%E8%AF%BB%E5%86%99%E9%94%81%E5%88%86%E7%A6%BB-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://maizitoday.github.io/post/%E8%AF%BB%E5%86%99%E9%94%81%E5%88%86%E7%A6%BB-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
      <description>[TOC] 转载地址： https://blog.csdn.net/weixin_39715061/article/details/81081008 需求简明分析 读的时候有好几个线程一起去读它 并行的去读,不会对下一个产生问题。 如果有人在写 你就不能读了 线程就会wait住 ，如果有</description>
    </item>
    
  </channel>
</rss>